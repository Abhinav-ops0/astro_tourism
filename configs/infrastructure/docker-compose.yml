services:
  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: astro_tourism_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/ssl:/etc/nginx/ssl  # For future SSL certificates
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    networks:
      - astro_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # React frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: astro_tourism_frontend
    restart: unless-stopped
    networks:
      - astro_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Python Flask backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: astro_tourism_backend
    environment:
      - FLASK_ENV=production
      - PORT=5000
    restart: unless-stopped
    networks:
      - astro_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  astro_network:
    driver: bridge

volumes:
  ssl_certs:
    driver: local